#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.6
#  in conjunction with Tcl version 8.6
#    Nov 10, 2020 10:34:32 PM EST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

#import option_support

v = 1

choices = [
    ("Automatic",1),
    ("Regressive",2),
    ("Stationary",3),
    ("Bullish⠀⠀",4),
    ("Bearish⠀⠀",5)
]


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    #option_support.set_Tk_var()
    top = Toplevel1 (root)
    #option_support.init(root, top)





    root.mainloop()

def ShowChoice():
    global v
    print(v.get())

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    option_support.set_Tk_var()
    top = Toplevel1 (w)
    option_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):


  # initializing the choice, i.e. Python
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("1019x1031+836+229")
        top.minsize(120, 1)
        top.maxsize(2564, 1421)
        top.resizable(1,  1)
        top.title("Option Forecasting Tool")
        top.configure(background="#d9d9d9")

        self.Labelframe1 = tk.LabelFrame(top)
        self.Labelframe1.place(relx=0.079, rely=0.039, relheight=0.081
                , relwidth=0.854)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(foreground="black")
        self.Labelframe1.configure(text='''Symbol''')
        self.Labelframe1.configure(background="#d9d9d9")

        self.Entry1 = tk.Entry(self.Labelframe1)
        self.Entry1.place(relx=0.138, rely=0.476, height=17, relwidth=0.177
                , bordermode='ignore')
        self.Entry1.configure(background="white")
        self.Entry1.configure(cursor="fleur")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(insertbackground="black")

        self.Label1 = tk.Label(self.Labelframe1)
        self.Label1.place(relx=0.011, rely=0.476, height=21, width=104
                , bordermode='ignore')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Input Symbol''')

        self.Data = tk.Button(self.Labelframe1)
        self.Data.place(relx=0.379, rely=0.357, height=34, width=127
                , bordermode='ignore')
        self.Data.configure(activebackground="#ececec")
        self.Data.configure(activeforeground="#000000")
        self.Data.configure(background="#d9d9d9")
        self.Data.configure(disabledforeground="#a3a3a3")
        self.Data.configure(foreground="#000000")
        self.Data.configure(highlightbackground="#d9d9d9")
        self.Data.configure(highlightcolor="black")
        self.Data.configure(pady="0")
        self.Data.configure(text='''Load Symbol''')

        self.status = tk.Label(self.Labelframe1)
        self.status.place(relx=0.586, rely=0.476, height=21, width=203
                , bordermode='ignore')
        self.status.configure(background="#d9d9d9")
        self.status.configure(disabledforeground="#a3a3a3")
        self.status.configure(foreground="#000000")
        self.status.configure(text='''Status: Data download complete''')
        #self.status.configure(text='''Status: waiting for symbol''')

        self.Labelframe2 = tk.LabelFrame(top)
        self.Labelframe2.place(relx=0.079, rely=0.155, relheight=0.196
                , relwidth=0.85)
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(foreground="black")
        self.Labelframe2.configure(text='''Forecast Setting''')
        self.Labelframe2.configure(background="#d9d9d9")

        # self.Radiobutton1 = tk.Radiobutton(self.Labelframe2)
        # self.Radiobutton1.place(relx=0.104, rely=0.149, relheight=0.144
        #         , relwidth=0.09, bordermode='ignore')
        # self.Radiobutton1.configure(activebackground="#ececec")
        # self.Radiobutton1.configure(activeforeground="#000000")
        # self.Radiobutton1.configure(background="#d9d9d9")
        # self.Radiobutton1.configure(disabledforeground="#a3a3a3")
        # self.Radiobutton1.configure(foreground="#000000")
        # self.Radiobutton1.configure(highlightbackground="#d9d9d9")
        # self.Radiobutton1.configure(highlightcolor="black")
        # self.Radiobutton1.configure(justify='left')
        # self.Radiobutton1.configure(text='''Automatic''')
        # #self.Radiobutton1.configure(variable=option_support.selectedButton)

        # self.Radiobutton1_1 = tk.Radiobutton(self.Labelframe2)
        # self.Radiobutton1_1.place(relx=0.104, rely=0.297, relheight=0.144
        #         , relwidth=0.09, bordermode='ignore')
        # self.Radiobutton1_1.configure(activebackground="#ececec")
        # self.Radiobutton1_1.configure(activeforeground="#000000")
        # self.Radiobutton1_1.configure(background="#d9d9d9")
        # self.Radiobutton1_1.configure(cursor="fleur")
        # self.Radiobutton1_1.configure(disabledforeground="#a3a3a3")
        # self.Radiobutton1_1.configure(foreground="#000000")
        # self.Radiobutton1_1.configure(highlightbackground="#d9d9d9")
        # self.Radiobutton1_1.configure(highlightcolor="black")
        # self.Radiobutton1_1.configure(justify='left')
        # self.Radiobutton1_1.configure(text='''Regressive''')
        # #self.Radiobutton1_1.configure(variable=option_support.selectedButton)

        # self.Radiobutton1_2 = tk.Radiobutton(self.Labelframe2)
        # self.Radiobutton1_2.place(relx=0.104, rely=0.446, relheight=0.153
        #         , relwidth=0.09, bordermode='ignore')
        # self.Radiobutton1_2.configure(activebackground="#ececec")
        # self.Radiobutton1_2.configure(activeforeground="#000000")
        # self.Radiobutton1_2.configure(background="#d9d9d9")
        # self.Radiobutton1_2.configure(disabledforeground="#a3a3a3")
        # self.Radiobutton1_2.configure(foreground="#000000")
        # self.Radiobutton1_2.configure(highlightbackground="#d9d9d9")
        # self.Radiobutton1_2.configure(highlightcolor="black")
        # self.Radiobutton1_2.configure(justify='left')
        # self.Radiobutton1_2.configure(text='''Stationary''')
        # #self.Radiobutton1_2.configure(variable=option_support.selectedButton)

        # self.Radiobutton1_3 = tk.Radiobutton(self.Labelframe2)
        # self.Radiobutton1_3.place(relx=0.081, rely=0.594, relheight=0.134
        #         , relwidth=0.113, bordermode='ignore')
        # self.Radiobutton1_3.configure(activebackground="#ececec")
        # self.Radiobutton1_3.configure(activeforeground="#000000")
        # self.Radiobutton1_3.configure(background="#d9d9d9")
        # self.Radiobutton1_3.configure(disabledforeground="#a3a3a3")
        # self.Radiobutton1_3.configure(foreground="#000000")
        # self.Radiobutton1_3.configure(highlightbackground="#d9d9d9")
        # self.Radiobutton1_3.configure(highlightcolor="black")
        # self.Radiobutton1_3.configure(justify='left')
        # self.Radiobutton1_3.configure(text='''Bullish''')
        # #self.Radiobutton1_3.configure(variable=option_support.selectedButton)

        # self.Radiobutton1_3_1 = tk.Radiobutton(self.Labelframe2)
        # self.Radiobutton1_3_1.place(relx=0.092, rely=0.743, relheight=0.134
        #         , relwidth=0.09, bordermode='ignore')
        # self.Radiobutton1_3_1.configure()
        # self.Radiobutton1_3_1.configure()
        # self.Radiobutton1_3_1.configure()
        # self.Radiobutton1_3_1.configure()
        # self.Radiobutton1_3_1.configure()
        # self.Radiobutton1_3_1.configure()
        # self.Radiobutton1_3_1.configure()
        # self.Radiobutton1_3_1.configure()
        # self.Radiobutton1_3_1.configure()
        #self.Radiobutton1_3_1.configure(variable=option_support.selectedButton)

        global v
        v = tk.IntVar()
        v.set(1)

        for val, language in enumerate(choices):
            print(val,language[0])
            self.b=tk.Radiobutton(self.Labelframe2, 
                          text=language[0],
                          padx = 20, 
                          variable=v, 
                          command=ShowChoice,
                          activebackground="#ececec",
                          activeforeground="#000000",
                          background="#d9d9d9",
                          disabledforeground="#a3a3a3",
                          foreground="#000000",
                          highlightbackground="#d9d9d9",
                          highlightcolor="black",
                          justify='left',
                          value=val)
            self.b.place(relx=0.092, rely=0.15*(val+1), relheight=0.134
                , relwidth=0.15, bordermode='ignore')


        self.Forecast = tk.Button(self.Labelframe2)
        self.Forecast.place(relx=0.762, rely=0.198, height=44, width=157
                , bordermode='ignore')
        self.Forecast.configure(activebackground="#ececec")
        self.Forecast.configure(activeforeground="#000000")
        self.Forecast.configure(background="#d9d9d9")
        self.Forecast.configure(disabledforeground="#a3a3a3")
        self.Forecast.configure(foreground="#000000")
        self.Forecast.configure(highlightbackground="#d9d9d9")
        self.Forecast.configure(highlightcolor="black")
        self.Forecast.configure(pady="0")
        self.Forecast.configure(text='''Forecast''')

        self.Forecast_1 = tk.Button(self.Labelframe2)
        self.Forecast_1.place(relx=0.762, rely=0.644, height=44, width=157
                , bordermode='ignore')
        self.Forecast_1.configure(activebackground="#ececec")
        self.Forecast_1.configure(activeforeground="#000000")
        self.Forecast_1.configure(background="#d9d9d9")
        self.Forecast_1.configure(disabledforeground="#a3a3a3")
        self.Forecast_1.configure(foreground="#000000")
        self.Forecast_1.configure(highlightbackground="#d9d9d9")
        self.Forecast_1.configure(highlightcolor="black")
        self.Forecast_1.configure(pady="0")
        self.Forecast_1.configure(text='''Chart''')

        self.regressive_input = tk.Entry(self.Labelframe2)
        self.regressive_input.place(relx=0.346, rely=0.347, height=17
                , relwidth=0.109, bordermode='ignore')
        self.regressive_input.configure(background="white")
        self.regressive_input.configure(disabledforeground="#a3a3a3")
        self.regressive_input.configure(font="TkFixedFont")
        self.regressive_input.configure(foreground="#000000")
        self.regressive_input.configure(insertbackground="black")

        self.bulish_input = tk.Entry(self.Labelframe2)
        self.bulish_input.place(relx=0.346, rely=0.644, height=17, relwidth=0.109
                , bordermode='ignore')
        self.bulish_input.configure(background="white")
        self.bulish_input.configure(disabledforeground="#a3a3a3")
        self.bulish_input.configure(font="TkFixedFont")
        self.bulish_input.configure(foreground="#000000")
        self.bulish_input.configure(highlightbackground="#d9d9d9")
        self.bulish_input.configure(highlightcolor="black")
        self.bulish_input.configure(insertbackground="black")
        self.bulish_input.configure(selectbackground="blue")
        self.bulish_input.configure(selectforeground="white")

        self.bearish_input = tk.Entry(self.Labelframe2)
        self.bearish_input.place(relx=0.346, rely=0.792, height=17
                , relwidth=0.109, bordermode='ignore')
        self.bearish_input.configure(background="white")
        self.bearish_input.configure(disabledforeground="#a3a3a3")
        self.bearish_input.configure(font="TkFixedFont")
        self.bearish_input.configure(foreground="#000000")
        self.bearish_input.configure(highlightbackground="#d9d9d9")
        self.bearish_input.configure(highlightcolor="black")
        self.bearish_input.configure(insertbackground="black")
        self.bearish_input.configure(selectbackground="blue")
        self.bearish_input.configure(selectforeground="white")

        self.Label2 = tk.Label(self.Labelframe2)
        self.Label2.place(relx=0.277, rely=0.32, height=21, width=34
                , bordermode='ignore')
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''Days:''')

        self.Label2_1 = tk.Label(self.Labelframe2)
        self.Label2_1.place(relx=0.254, rely=0.62, height=21, width=73
                , bordermode='ignore')
        self.Label2_1.configure(activebackground="#f9f9f9")
        self.Label2_1.configure(activeforeground="black")
        self.Label2_1.configure(background="#d9d9d9")
        self.Label2_1.configure(disabledforeground="#a3a3a3")
        self.Label2_1.configure(foreground="#000000")
        self.Label2_1.configure(highlightbackground="#d9d9d9")
        self.Label2_1.configure(highlightcolor="black")
        self.Label2_1.configure(text='''Magnitude:''')

        self.Label2_1_1 = tk.Label(self.Labelframe2)
        self.Label2_1_1.place(relx=0.254, rely=0.77, height=21, width=73
                , bordermode='ignore')
        self.Label2_1_1.configure(activebackground="#f9f9f9")
        self.Label2_1_1.configure(activeforeground="black")
        self.Label2_1_1.configure(background="#d9d9d9")
        self.Label2_1_1.configure(disabledforeground="#a3a3a3")
        self.Label2_1_1.configure(foreground="#000000")
        self.Label2_1_1.configure(highlightbackground="#d9d9d9")
        self.Label2_1_1.configure(highlightcolor="black")
        self.Label2_1_1.configure(text='''Magnitude:''')

        self.Labelframe3 = tk.LabelFrame(top)
        self.Labelframe3.place(relx=0.079, rely=0.369, relheight=0.598
                , relwidth=0.852)
        self.Labelframe3.configure(relief='groove')
        self.Labelframe3.configure(foreground="black")
        self.Labelframe3.configure(text='''Options''')
        self.Labelframe3.configure(background="#d9d9d9")

        labels = ["Date", "67% confidence range", "Strike","Ask","95% confidence range", "Strike","Ask", "Most Open Interest"]
        width = [12,18,8,8,18,8,8,25]



        dates = ['2020-11-13', '2020-11-20', '2020-11-27', '2020-12-04',
               '2020-12-11', '2020-12-18', '2020-12-24', '2021-01-15',
               '2021-02-19', '2021-03-19', '2021-04-16', '2021-06-18',
               '2021-09-17']

        int1= [(110.77506409253698, 121.70832398350228),
         (106.8949916778185, 126.85630190897905),
         (104.49641738178009, 130.52278171577572),
         (99.95557924731003, 138.86733638252065),
         (96.30650158701738, 147.58803608584643),
         (91.6670798528975, 163.63860741679085),
         (90.51633522238625, 169.86097409033522),
         (88.97453389470878, 182.81392501483725),
         (88.38670974348844, 199.88452080591526),
         (89.5686705929695, 221.52485915008327),
         (92.5224399453131, 245.19710552366362),
         (95.04099151922078, 259.1613255896136),
         (99.18683882391986, 277.8377774785636)]

        int2 = [(105.30843414705433, 127.17495392898493),
         (96.9143365622382, 136.83695702455933),
         (91.48323521478227, 143.53596388277356),
         (80.49970067970472, 158.32321495012596),
         (70.66573433760286, 173.22880333526095),
         (55.681316070950814, 199.62437119873755),
         (50.84401578841175, 209.53329352430973),
         (42.05483833464456, 229.73362057490147),
         (32.63780421227503, 255.63342633712867),
         (23.5905763144126, 287.5029534286402),
         (16.185107156137832, 321.5344383128389),
         (12.980824484024367, 341.22149262481),
         (9.861369496597973, 367.1632468058855)]

        int1 = [(round(i[0],2),round(i[1],2)) for i in int1]
        int2 = [(round(i[0],2),round(i[1],2)) for i in int2]

        puts =[110.0,106.0,104.0,99.0,96.0,90.0,90.0,88.75,85.0,88.75,92.5,95.0, 97.5]
        ask = [0.09, 0.24, 0.28, 0.27, 0.3, 0.25, 0.32, 0.52, 0.78, 1.36, 2.16, 3.85, 6.05]


        puts2= [105.0, 96.0, 90.0, 80.0, 70.0, 33.75, 0, 40.0, 0, 0, 0, 0, 0]
        ask2 = [0.04, 0.07, 0.08, 0.09, 0.07, 0.16, 0, 0.05, 0, 0, 0, 0, 0]

        oi = ["OI: 11386 strike: 110.0 , ask: 0.09 ",
"OI: 32003 strike: 100.0 , ask: 0.11 ",
"OI: 2943 strike: 100.0 , ask: 0.17 ",
"OI: 1187 strike: 90.0 , ask: 0.13 ",
"OI: 939 strike: 90.0 , ask: 0.18 ",
"OI: 45691 strike: 90.0 , ask: 0.25 ",
"OI: 296 strike: 90.0 , ask: 0.32 ",
"OI: 83097 strike: 37.5 , ask: 0.04 ",
"OI: 1291 strike: 80.0 , ask: 0.59 ",
"OI: 13625 strike: 80.0 , ask: 0.77 ",
"OI: 4042 strike: 90.0 , ask: 1.81 ",
"OI: 30193 strike: 45.0 , ask: 0.29 ",
"OI: 14265 strike: 90.0 , ask: 4.1 "]

        label = [dates,int1,puts,ask,int2,puts2,ask2,oi]
        for i in range(len(labels)):
            self.label1 = tk.Label(self.Labelframe3 ,text=labels[i],width=width[i])

            self.label1.configure(activebackground="#f9f9f9")
            self.label1.configure(activeforeground="black")
            self.label1.configure(background="#d9d9d9")
            self.label1.configure(disabledforeground="#a3a3a3")
            self.label1.configure(relief="ridge")
            self.label1.configure(foreground="#000000")
            self.label1.configure(highlightbackground="#d9d9d9")
            self.label1.configure(highlightcolor="black")
            self.label1.grid(row=1, column=i,padx=5)

        for j in range(13):
            for i in range(len(label)):
                self.label1 = tk.Label(self.Labelframe3 ,text=label[i][j],width=width[i])

                self.label1.configure(activebackground="#f9f9f9")
                self.label1.configure(activeforeground="black")
                self.label1.configure(background="#d9d9d9")
                self.label1.configure(disabledforeground="#a3a3a3")
                self.label1.configure(relief="ridge")
                self.label1.configure(foreground="#000000")
                self.label1.configure(highlightbackground="#d9d9d9")
                self.label1.configure(highlightcolor="black")
                self.label1.grid(row=j+2, column=i,padx=5)







if __name__ == '__main__':
    vp_start_gui()





